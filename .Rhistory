ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=continent_frequency$n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=continent_frequency$n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
pie(continent_frequency$n,
labels=continent_frequency$continent,
main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
continent_frequency
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency$n, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = "continent")) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=n, y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename(n, "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename("n", "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename(n = "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename(n = "count") %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename("n" = "count") %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename("n" = "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
continent_frequency
continent_frequency %>% rename("n" = "count")
continent_frequency %>% rename("n" = "abasat")
rlang::last_error()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count(name = "count")
ggplot(data = continent_frequency, aes(x="", y = "count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=count, y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=count, y = "", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
host_continents <- olympic_games %>%
group_by(continent) %>%
count(name = "count")
host_cities <- olympic_games %>%
group_by(city) %>%
count(name = "count")
pie(host_continents$n,
labels=host_continents$continent,
main="Olympic games hosted by countries",
col = rainbow(length(host_continents$continent)))
pie(host_continents$count,
labels=host_continents$continent,
main="Olympic games hosted by countries",
col = rainbow(length(host_continents$continent)))
ggplot(data = host_continents, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
host_cities <- olympic_games %>%
group_by(city) %>%
count(name = "count")
host_citites
host_cities
# top 3 cities where the Olympic Games held most
host_cities %>%
top_n(3)
host_cities %>%
n(3)
# top 3 cities where the Olympic Games held most
host_cities %>%
slice(1:3)
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc("count"))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc("count"))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count")
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc())
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(n))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count)) %>%
top_n(3)
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count)) %>%
ungroup() %>%
top_n(3)
library(dplyr)
setwd("C:/Users/User/Desktop/r-examples")
gc()
load("C:/Users/User/Desktop/r-examples/.RData")
# tags that mentioned on how many question
question_tags %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts)) %>%
ungroup() %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
select(tag_name, mentioned_question_counts)
question_tags %>%
filter(is.na())
question_tags %>%
filter(is.na(t))
question_tags %>%
is.na(question_tag)
question_tags %>%
is.na(tags)
question_tags %>%
is.na(tag_name)
question_tags %>%
is.na(questions_tags$tag_name)
question_tags %>%
is.na(question_tags$tag_name)
questions
inventory_parts
inventory_parts %>%
is.na(color_id)
inventory_parts %>%
is.na(inventory_parts$color_id)
inventory_parts %>%
is.na(inventory_parts$part_num)
is.na(inventory_parts$part_num)
is.na(inventory_parts$color_id)
is.na(inventory_parts$inventory_id)
is.na(part_categories)
is.na(tags)
inventories
is.na(inventories$version)
questions
questions_tags
question_tags
question_tags %>%
left_join(questions, by = c("question_id" = "id"))
question_tags %>%
left_join(questions, by = c("question_id" = "id")) %>%
filter(is.na(creation_date))
question_tags %>%
left_join(questions, by = c("question_id" = "id")) %>%
filter(is.na(score))
colnames()
colnames(question_tags)
question_tags %>%
left_join(questions, by = c("question_id" = "id")) %>%
colnames() %>%
filter(is.na(score))
question_tags %>%
left_join(questions, by = c("question_id" = "id")) %>%
filter(is.na(score))
question_tags %>%
left_join(questions, by = c("question_id" = "id")) %>%
filter(!is.na(score))
question_tags %>%
left_join(questions, by = c("question_id" = "id")) %>%
filter(is.na(tag_id))
question_tags %>%
left_join(questions, by = c("question_id" = "id")) %>%
left_join(tags, by = "tag_id" = "id")
question_tags %>%
left_join(questions, by = c("question_id" = "id")) %>%
left_join(tags, by = c("tag_id" = "id"))
question_tags %>%
inner_join(questions, by = c("question_id" = "id")) %>%
inner_join(tags, by = c("tag_id" = "id"))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id"))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
filter(is.na(tag_id))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
filter(is.na(question_id))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
filter(is.na(question_id)) %>%
replace_na("UNKNOWN")
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
replace_na(list(question_id = "UNKOWN"))
library(tidyr)
library(tidyr)
install.packages("tidyr")
library(tidyr)
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
replace_na(list(question_id = "UNKOWN"))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
replace_na(list(question_id = 0))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
filter(is.na(question_id))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
filter(is.na(question_id)) %>%
replace_na(list(question_id = 0))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
filter(is.na(question_id)) %>%
replace_na(list(question_id = 0, creation_date = 'dd-mm-yyyy'))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
filter(is.na(question_id)) %>%
replace_na(list(question_id = 0, score = -Inf))
question_tags %>%
right_join(questions, by = c("question_id" = "id")) %>%
right_join(tags, by = c("tag_id" = "id")) %>%
filter(is.na(question_id)) %>%
replace_na(list(question_id = 0, score = -1000000))
themes
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
select(id, name_parent, name_child)
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("parent_id" = "parent_id"))
themes %>%
filter(name = "Star Wars")
themes %>%
filter(name == "Star Wars")
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("parent_id" = "parent_id"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix("_child", "_grand_child"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_grand_child"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_grand_child")) %>%
select(id, name_parent, name_child, name_grand_child)
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_grand_child")) %>%
select(name_parent, name_child, name_grand_child)
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_grand_child")) %>%
select(name_parent, name_child, name)
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_grand_child")) %>%
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_grand_child"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_grand_child"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_gc"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_gc")) %>%
inner_join(themes, by = c("id_gc" = "parent_id"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_gc"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_child", "_grand_child")) %>%
select(name_parent, name_child, name)
question_tags %>%
full_join(tags, by = c("tag_id" = "id"))
question_tags %>%
inner_join(tags, by = c("tag_id" = "id"))
question_tags %>%
left_join(tags, by = c("tag_id" = "id"))
question_tags %>%
right_join(tags, by = c("tag_id" = "id"))
question_tags %>%
full_join(tags, by = c("tag_id" = "id"))
question_tags %>%
count(0)
question_tags %>%
count()
question_tags %>%
count(question_id)
question_tags %>%
count(tag_id)
question_tags %>%
count(question_id, tag_id)
inventory_sets_themes <- inventory_parts_joined %>%
inner_join(sets, by = "set_num") %>%
inner_join(themes, by = c("theme_id" = "id"), suffix = c("_set", "_theme"))
inventory_sets_themes <- inventory_parts_joined %>%
inner_join(sets, by = "set_num") %>%
inner_join(themes, by = c("theme_id" = "id"), suffix = c("_set", "_theme"))
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix=c("_parent", "_child")) %>%
select(id, name_parent, name_child)
question_tags %>%
semi_join(tags, by = c("tag_id" = "id"))
question_tags %>%
anti_join(tags, by = c("tag_id" = "id"))
question_tags %>%
semi_join(tags, by = c("tag_id" = "id"))
question_tags %>%
inner_join(tags, by = c("tag_id" = "id"))
question_tags %>%
anti_join(tags, by = c("tag_id" = "id"))
student <- data.frame(id = 1 : 4, name = c("Samir", "Cabbar", "Qasim", "Zakir"),
teacher_id = c(2, 3, 1))
student <- data.frame(id = 1 : 4, name = c("Samir", "Cabbar", "Qasim", "Zakir"),
teacher_id = c(2, 3, 1, 4))
student
teacher <- data.frame(id = c(2, 3, 5, 8), name = c("Babek", "Ali", "Mubarek", "Mehebbet"))
teacher
student
student %>%
inner_join(teacher, by = c("teacher_id" = "id"))
student %>%
inner_join(teacher, by = c("teacher_id" = "id"), suffix = c("_student", "_teacher"))
student %>%
left_join(teacher, by = c("teacher_id" = "id"), suffix = c("_student", "_teacher"))
student %>%
left_join(teacher, by = c("teacher_id" = "id"), suffix = c("_student", "_teacher")) %>%
replace_na(list(name_teacher = "-"))
student %>%
right_join(teacher, by = c("teacher_id" = "id"), suffix = c("_student", "_teacher"))
student %>%
full_join(teacher, by = c("teacher_id" = "id"), suffix = c("_student", "_teacher"))
student %>%
inner_join(teacher, by = c("teacher_id" = "id"), suffix = c("_student", "_teacher"))
student %>%
semi_join(teacher, by = c("teacher_id" = "id"), suffix = c("_student", "_teacher"))
student %>%
anti_join(teacher, by = c("teacher_id" = "id"), suffix = c("_student", "_teacher"))
# n() function can only be used within: summarise, mutate, filter
questions
# n() function can only be used within: summarize, mutate, filter
question_counts
# n() function can only be used within: summarize, mutate, filter
question_counts %>%
filter(n() > 100)
question_tags %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts)) %>%
ungroup() %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
select(tag_name, mentioned_question_counts)
question_tags %>%
group_b(tag_name)
question_tags %>%
group_by(tag_name)
group_by(tag_name)
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name)
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name) %>%
summarise(num_of_questions = n())
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name) %>%
summarise(num_of_questions = n())
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name) %>%
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name)
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name)
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name) %>%
filter(tag_id == 18)
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name) %>%
summarise(num_of_questions = n())
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_name) %>%
summarise(num_of_questions = n()) %>%
arrange(desc(num_of_questions))
# bind_rows
questions_with_tags <- questions %>%
inner_join(question_tags, by = c("id" = "question_id")) %>%
inner_join(tags, by = c("tag_id" = "id"))
answers_with_tags <- answers %>%
inner_join(question_tags, by = "question_id") %>%
inner_join(tags, by = c("tag_id" = "id"))
questions_with_tags
answers_with_tags
posts_with_tags <- bind_rows(questions_with_tags %>% mutate(type = "question"),
answers_with_tags %>% mutate(type = "answer"))
posts_with_tags
posts_with_tags %>%
select(id, tag_name, type, score)
posts_with_tags %>%
select(id, tag_name, type, score) %>%
filter(type == "answer")
gc()
