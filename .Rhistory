counties %>%
group_by(state, metro) %>%
filter(state %in% c("Alabama", "Texas"))
counties %>%
group_by(state, metro) %>%
filter(state %in% c("Alabama", "Texas")) %>%
count(state)
counties %>%
group_by(state) %>%
filter(state %in% c("Alabama", "Texas")) %>%
count(state)
babynames %>%
group_by(year) %>%
mutate(year_total = sum(number)) %>%
ungroup() %>%
mutate(fraction = (number / year_total))
babynames %>%
group_by(year) %>%
mutate(year_total = sum(number)) %>%
mutate(fraction = (number / year_total))
babynames
babynames
babynames %>%
select(name, year, lag(year))
babynames %>%
select(name, year)
babynames %>%
select(name, year, lag_year = lag(year))
babynames %>%
transmute(name, year, lag_year = lag(year))
group_by(year)
babynames %>%
transmute(name, year, lag_year = lag(year)) %>%
group_by(year)
source("C:/Users/User/Desktop/r-examples/dplyr.R", echo=TRUE)
babynames %>%
transmute(name, year, lag_year = lag(year)) %>%
group_by(year) %>%
count(name)
babynames %>%
transmute(name, year, lag_year = lag(year)) %>%
filter(year == 2000)
diff = vector_a - lag(vector_a)
vector_a <- c(1, 2, 3, 4)
diff = vector_a - lag(vector_a)
diff
diff = vector_a - lag(vector_a)
diff
vector_a <- c(4, 5, 6, 8)
diff = vector_a - lag(vector_a)
diff
vector_a <- c(4, 9, 22, 36)
diff = vector_a - lag(vector_a)
diff
diff = vector_a - lag(vector_a, default = 0)
diff
vector_a <- c(4, 9, 22, 36)
diff = vector_a - lag(vector_a, default = 0)
diff
diff = vector_a - lag(vector_a, default = 1)
diff
diff = vector_a - lag(vector_a, default = 's')
diff = vector_a - lag(vector_a, default = 2)
diff
diff = vector_a - lag(vector_a, default = 0)
diff
diff = vector_a - lag(vector_a, default = 0)
diff
diff <- vector_a - lead(vector_a)
diff
diff <- lead(vector_a) - vector_a
diff
source("C:/Users/User/Desktop/r-examples/dplyr.R", echo=TRUE)
babynames %>%
group_by(year) %>%
count(name)
babynames %>%
group_by(year) %>%
count(year)
babynames
library(readxl)
library(readxl)
olympic_games <- read_excel("olympic_games.xlsx")
olympic_games
view(olympic_games)
library(dplyr)
view(olympic_games)
view(olympic_games)
view(olympic_games)
view(olympic_games)
glimpse(olympic_gmaes)
glimpse(olympic_games)
View(olympic_games)
olympic_games %>%
mutate(city_country = City + " " + Country)
olympic_games %>%
count()
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year))
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year) / 4)
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 1) / 4)
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 4) / 4)
2018 - 1896
1896 + 124
olympic_games <- read_excel("olympic_games.xlsx")
olympic_games %>%
count()
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 4) / 4)
olympic_games <- read_excel("olympic_games.xlsx")
olympic_games %>%
count()
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 4) / 4)
olympic_games <- read_excel("olympic_games.xlsx")
olympic_games %>%
count()
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 4) / 4)
olympic_games %>%
summarise(min_year = min(year), max_year = max(year), diff = (max_year - min_year + 4) / 4)
olympic_games %>%
select(City)
olympic_games %>%
select(city, country, year, continent) %>%
filter(year = max(year) | year = min(year))
olympic_games %>%
select(city, country, year, continent) %>%
filter(year == max(year) | year == min(year))
olympic_games %>%
filter(year == max(year) | year == min(year))
olympic_games %>%
group_by(continent) %>%
count()
table(olympic_games)
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
continent_frequency
pie(labels=continent_frequency.continent, edges=continent_frequency.n)
geeks<- c(23, 56, 20, 63)
labels <- c("Mumbai", "Pune", "Chennai", "Bangalore")
# Plot the chart.
pie(geeks, labels)
pie(continent_frequency.n, continent_frequency.continent)
class(continent_frequency)
pie(continent_frequency %>% select(n), continent_frequency %>%  select(continent))
pie(continent_frequency$continent)
pie(continent_frequency$n, continent_frequency$continent)
pie(continent_frequency$n, labels=continent_frequency$continent)
pie(continent_frequency$n, labels=continent)
pie(continent_frequency$n, labels=continent_frequency$continent, main="Olympic games hosted by countries")
col = rainbow(length(continent_frequency$continent))
pie(continent_frequency$n,
labels=continent_frequency$continent,
main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
pie(continent_frequency$n,
labels=continent_frequency$continent,
sep = " ", pct, "%",
main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
pie(continent_frequency$n,
labels=continent_frequency$continent,
sep = " ",     main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
pie(continent_frequency$n,
labels=continent_frequency$continent,
sep = "    ",     main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent))
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar()
library(ggplot2)
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar()
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=continent_frequency$n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=continent_frequency$n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
pie(continent_frequency$n,
labels=continent_frequency$continent,
main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
continent_frequency
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency$n, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = "continent")) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=n, y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename(n, "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename("n", "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename(n = "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename(n = "count") %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename("n" = "count") %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename("n" = "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
continent_frequency
continent_frequency %>% rename("n" = "count")
continent_frequency %>% rename("n" = "abasat")
rlang::last_error()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count(name = "count")
ggplot(data = continent_frequency, aes(x="", y = "count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=count, y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=count, y = "", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
host_continents <- olympic_games %>%
group_by(continent) %>%
count(name = "count")
host_cities <- olympic_games %>%
group_by(city) %>%
count(name = "count")
pie(host_continents$n,
labels=host_continents$continent,
main="Olympic games hosted by countries",
col = rainbow(length(host_continents$continent)))
pie(host_continents$count,
labels=host_continents$continent,
main="Olympic games hosted by countries",
col = rainbow(length(host_continents$continent)))
ggplot(data = host_continents, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
host_cities <- olympic_games %>%
group_by(city) %>%
count(name = "count")
host_citites
host_cities
# top 3 cities where the Olympic Games held most
host_cities %>%
top_n(3)
host_cities %>%
n(3)
# top 3 cities where the Olympic Games held most
host_cities %>%
slice(1:3)
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc("count"))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc("count"))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count")
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc())
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(n))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count)) %>%
top_n(3)
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count)) %>%
ungroup() %>%
top_n(3)
setwd("C:/Users/User/Desktop/r-examples")
answers <- readRDS("C:/Users/User/Desktop/r-examples/answers.rds")
colors <- readRDS("C:/Users/User/Desktop/r-examples/colors.rds")
inventories <- readRDS("C:/Users/User/Desktop/r-examples/inventories.rds")
inventory_parts <- readRDS("C:/Users/User/Desktop/r-examples/inventory_parts.rds")
part_categories <- readRDS("C:/Users/User/Desktop/r-examples/part_categories.rds")
parts <- readRDS("C:/Users/User/Desktop/r-examples/parts.rds")
question_tags <- readRDS("C:/Users/User/Desktop/r-examples/question_tags.rds")
questions <- readRDS("C:/Users/User/Desktop/r-examples/questions.rds")
sets <- readRDS("C:/Users/User/Desktop/r-examples/sets.rds")
tags <- readRDS("C:/Users/User/Desktop/r-examples/tags.rds")
themes <- readRDS("C:/Users/User/Desktop/r-examples/themes.rds")
View(questions)
questions %>%
n()
library(dplyr)
questions %>%
n()
questions %>%
count()
questions %>%
group_by(score) %>%
count()
questions %>%
group_by(score) %>%
count() %>%
arrange(desc(score))
questions %>%
group_by(score) %>%
count(name="count") %>%
arrange(desc(score)) %>%
filter(count > 5)
questions %>%
group_by(score) %>%
count(name="count") %>%
arrange(desc(count)) %>%
filter(count > 5)
questions %>%
group_by(creation_date)
questions %>%
group_by(creation_date) %>%
count()
questions %>%
group_by(creation_date) %>%
count() %>%
arrange(desc(creation_date))
# day that asked most questions than other dates
questions %>%
group_by(creation_date) %>%
count(name="count") %>%
arrange(desc(count))
# day that asked most questions than other dates
question_counts <- questions %>%
group_by(creation_date) %>%
count(name="count") %>%
arrange(desc(count))
question_counts %>%
ungroup() %>%
top_n(3)
# day that asked most questions than other dates
question_counts <- questions %>%
group_by(creation_date) %>%
count(name="count") %>%
arrange(desc(count)) %>%
ungroup()
question_counts %>%
ungroup() %>%
top_n(3)
question_counts %>%
top_n(3)
View(question_tags)
View(tags)
# tags that mentioned on how many question
questions_tags %>%
group_by(tag_id) %>%
count()
# tags that mentioned on how many question
questions_tags %>%
group_by(tag_id) %>%
count()
# tags that mentioned on how many question
questions_tags
question_tags <- readRDS("C:/Users/User/Desktop/r-examples/question_tags.rds")
# tags that mentioned on how many question
questions_tags
# tags that mentioned on how many question
question_tags %>%
group_by(tag_id) %>%
count()
# tags that mentioned on how many question
question_tags %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts")
# tags that mentioned on how many question
question_tags %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
# tags that mentioned on how many question
question_tags %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts))
# tags that mentioned on how many question
question_tags %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts))
# tags that mentioned on how many question
question_tags %>%
inner_join(tags, by = c("tag_id" = "id"))
# tags that mentioned on how many question
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts))
# tags that mentioned on how many question
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts))
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts))
# tags that mentioned on how many question
question_tags %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
select(tag_name) %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts))
# tags that mentioned on how many question
question_tags %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts)) %>%
ungroup() %>%
inner_join(tags, by = c("tag_id" = "id"))
# tags that mentioned on how many question
question_tags %>%
group_by(tag_id) %>%
count(name="mentioned_question_counts") %>%
arrange(desc(mentioned_question_counts)) %>%
ungroup() %>%
inner_join(tags, by = c("tag_id" = "id")) %>%
select(tag_name, mentioned_question_counts)
