select(state, county, ends_with("a"))
counties %>%
select(state, county, ends_with("k"))
# rename methods
counties %>%
select(state, county, black_people_rate = black)
# rename methods
counties %>%
select(state, county, black_people_rate = black, n)
# rename methods
counties %>%
select(state, county, black_people_rate = black)
counties %>%
count(state) %>%
rename(number_of_counties = n)
counties %>%
transmute(state, county, population, public_workers = population * public_work / 100)
counties %>%
select(last_col())
counties %>%
select(lag())
counties %>%
select(lead())
counties %>%
select(lead(1:4))
lag(counties)
lag(counties, 3)
counties
lag(counties, 3, 1)
lead(counties)
lead(counties, 5)
lead(counties, 11)
counties %>%
count(state) %>%
rename(number_of_counties = n) %>%
lead(number_of_counties, 5)
counties %>%
count(state) %>%
rename(number_of_counties = n) %>%
ungroup() %>%
lead(number_of_counties, 5)
counties %>%
count(state) %>%
rename(number_of_counties = n) %>%
ungroup() %>%
lead(number_of_counties, 5)
counties %>%
count(state) %>%
rename(number_of_counties = n) %>%
ungroup() %>%
lead(number_of_counties, 5)
counties %>%
filter(state %in% c("Alabama", "Texas"))
counties %>%
group_by(state) %>%
filter(state %in% c("Alabama", "Texas"))
counties %>%
group_by(state, metro) %>%
filter(state %in% c("Alabama", "Texas"))
counties %>%
group_by(state, metro) %>%
filter(state %in% c("Alabama", "Texas")) %>%
count(state)
counties %>%
group_by(state) %>%
filter(state %in% c("Alabama", "Texas")) %>%
count(state)
babynames %>%
group_by(year) %>%
mutate(year_total = sum(number)) %>%
ungroup() %>%
mutate(fraction = (number / year_total))
babynames %>%
group_by(year) %>%
mutate(year_total = sum(number)) %>%
mutate(fraction = (number / year_total))
babynames
babynames
babynames %>%
select(name, year, lag(year))
babynames %>%
select(name, year)
babynames %>%
select(name, year, lag_year = lag(year))
babynames %>%
transmute(name, year, lag_year = lag(year))
group_by(year)
babynames %>%
transmute(name, year, lag_year = lag(year)) %>%
group_by(year)
source("C:/Users/User/Desktop/r-examples/dplyr.R", echo=TRUE)
babynames %>%
transmute(name, year, lag_year = lag(year)) %>%
group_by(year) %>%
count(name)
babynames %>%
transmute(name, year, lag_year = lag(year)) %>%
filter(year == 2000)
diff = vector_a - lag(vector_a)
vector_a <- c(1, 2, 3, 4)
diff = vector_a - lag(vector_a)
diff
diff = vector_a - lag(vector_a)
diff
vector_a <- c(4, 5, 6, 8)
diff = vector_a - lag(vector_a)
diff
vector_a <- c(4, 9, 22, 36)
diff = vector_a - lag(vector_a)
diff
diff = vector_a - lag(vector_a, default = 0)
diff
vector_a <- c(4, 9, 22, 36)
diff = vector_a - lag(vector_a, default = 0)
diff
diff = vector_a - lag(vector_a, default = 1)
diff
diff = vector_a - lag(vector_a, default = 's')
diff = vector_a - lag(vector_a, default = 2)
diff
diff = vector_a - lag(vector_a, default = 0)
diff
diff = vector_a - lag(vector_a, default = 0)
diff
diff <- vector_a - lead(vector_a)
diff
diff <- lead(vector_a) - vector_a
diff
source("C:/Users/User/Desktop/r-examples/dplyr.R", echo=TRUE)
babynames %>%
group_by(year) %>%
count(name)
babynames %>%
group_by(year) %>%
count(year)
babynames
library(readxl)
library(readxl)
olympic_games <- read_excel("olympic_games.xlsx")
olympic_games
view(olympic_games)
library(dplyr)
view(olympic_games)
view(olympic_games)
view(olympic_games)
view(olympic_games)
glimpse(olympic_gmaes)
glimpse(olympic_games)
View(olympic_games)
olympic_games %>%
mutate(city_country = City + " " + Country)
olympic_games %>%
count()
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year))
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year) / 4)
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 1) / 4)
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 4) / 4)
2018 - 1896
1896 + 124
olympic_games <- read_excel("olympic_games.xlsx")
olympic_games %>%
count()
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 4) / 4)
olympic_games <- read_excel("olympic_games.xlsx")
olympic_games %>%
count()
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 4) / 4)
olympic_games <- read_excel("olympic_games.xlsx")
olympic_games %>%
count()
olympic_games %>%
summarise(min_year = min(Year), max_year = max(Year), diff = (max_year - min_year + 4) / 4)
olympic_games %>%
summarise(min_year = min(year), max_year = max(year), diff = (max_year - min_year + 4) / 4)
olympic_games %>%
select(City)
olympic_games %>%
select(city, country, year, continent) %>%
filter(year = max(year) | year = min(year))
olympic_games %>%
select(city, country, year, continent) %>%
filter(year == max(year) | year == min(year))
olympic_games %>%
filter(year == max(year) | year == min(year))
olympic_games %>%
group_by(continent) %>%
count()
table(olympic_games)
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
continent_frequency
pie(labels=continent_frequency.continent, edges=continent_frequency.n)
geeks<- c(23, 56, 20, 63)
labels <- c("Mumbai", "Pune", "Chennai", "Bangalore")
# Plot the chart.
pie(geeks, labels)
pie(continent_frequency.n, continent_frequency.continent)
class(continent_frequency)
pie(continent_frequency %>% select(n), continent_frequency %>%  select(continent))
pie(continent_frequency$continent)
pie(continent_frequency$n, continent_frequency$continent)
pie(continent_frequency$n, labels=continent_frequency$continent)
pie(continent_frequency$n, labels=continent)
pie(continent_frequency$n, labels=continent_frequency$continent, main="Olympic games hosted by countries")
col = rainbow(length(continent_frequency$continent))
pie(continent_frequency$n,
labels=continent_frequency$continent,
main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
pie(continent_frequency$n,
labels=continent_frequency$continent,
sep = " ", pct, "%",
main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
pie(continent_frequency$n,
labels=continent_frequency$continent,
sep = " ",     main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
pie(continent_frequency$n,
labels=continent_frequency$continent,
sep = "    ",     main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent))
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar()
library(ggplot2)
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar()
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=continent_frequency$n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x=continent_frequency$n, y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
pie(continent_frequency$n,
labels=continent_frequency$continent,
main="Olympic games hosted by countries",
col = rainbow(length(continent_frequency$continent)))
continent_frequency
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency$n, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = "continent")) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=n, y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = "Count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename(n, "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename("n", "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count() %>%
rename(n = "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename(n = "count") %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename("n" = "count") %>%
count()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
rename("n" = "count")
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count()
continent_frequency
continent_frequency %>% rename("n" = "count")
continent_frequency %>% rename("n" = "abasat")
rlang::last_error()
continent_frequency <- olympic_games %>%
group_by(continent) %>%
count(name = "count")
ggplot(data = continent_frequency, aes(x="", y = "count", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=count, y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x=count, y = "", fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
ggplot(data = continent_frequency, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
host_continents <- olympic_games %>%
group_by(continent) %>%
count(name = "count")
host_cities <- olympic_games %>%
group_by(city) %>%
count(name = "count")
pie(host_continents$n,
labels=host_continents$continent,
main="Olympic games hosted by countries",
col = rainbow(length(host_continents$continent)))
pie(host_continents$count,
labels=host_continents$continent,
main="Olympic games hosted by countries",
col = rainbow(length(host_continents$continent)))
ggplot(data = host_continents, aes(x="", y = count, fill = continent)) +
geom_bar(stat = "identity", color = "black") +
coord_polar("y") +
labs(title = "The Olympic Games held by continents so far")
host_cities <- olympic_games %>%
group_by(city) %>%
count(name = "count")
host_citites
host_cities
# top 3 cities where the Olympic Games held most
host_cities %>%
top_n(3)
host_cities %>%
n(3)
# top 3 cities where the Olympic Games held most
host_cities %>%
slice(1:3)
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc("count"))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc("count"))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count")
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc())
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(n))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count))
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count)) %>%
top_n(3)
# top 3 cities where the Olympic Games held most
olympic_games %>%
group_by(city) %>%
count(name = "count") %>%
arrange(desc(count)) %>%
ungroup() %>%
top_n(3)
setwd("C:/Users/User/Desktop/r-examples")
themes <- readRDS("C:/Users/User/Desktop/r-examples/themes.rds")
tags <- readRDS("C:/Users/User/Desktop/r-examples/tags.rds")
sets <- readRDS("C:/Users/User/Desktop/r-examples/sets.rds")
questions <- readRDS("C:/Users/User/Desktop/r-examples/questions.rds")
question_tags <- readRDS("C:/Users/User/Desktop/r-examples/question_tags.rds")
parts <- readRDS("C:/Users/User/Desktop/r-examples/parts.rds")
part_categories <- readRDS("C:/Users/User/Desktop/r-examples/part_categories.rds")
part_categories <- readRDS("C:/Users/User/Desktop/r-examples/part_categories.rds")
inventory_parts <- readRDS("C:/Users/User/Desktop/r-examples/inventory_parts.rds")
inventories <- readRDS("C:/Users/User/Desktop/r-examples/inventories.rds")
answers <- readRDS("C:/Users/User/Desktop/r-examples/answers.rds")
colors <- readRDS("C:/Users/User/Desktop/r-examples/colors.rds")
5 / 2
5 %/% 2
pow(4, 5)
pow <- function (a, b = 1) {
return (a ** b)
}
pow(4, 5)
pow(10)
print(is.numeric(4))
print(is.call(pow))
print(is.array(c(1, 2, 3)))
print(is.vector(c(1, 2, 3)))
arr <- array(c(1, 2, 3, 4, 5))
print(is.array(arr))
is.complex(pow)
is.complex(3 + 4)
is.complex
help(is.complex)
is.function(pow)
frame <- data.frame(c(1, 2, 3), c("Samir", "Cabbar", "Zakir"))
is.data.frame(frame)
frame
frame.names = c("RowNum", "Name")
frame
colnames(frame) = c("RowNum", "Name")
frame
rows <- c(1, 2, 3)
names <- c("Samir", "Cabbar", "Zakir")
frame <- data.frame(id = rows, person = names)
frame
rownames(frame) = c("#1","#2","#3")
frame
data.frame(c(1, 2, 3), c("Samir", "Cabbar"))
data.frame(c(1, 2, 3), c("Samir", "Cabbar", as.na()))
data.frame(c(1, 2, 3), c("Samir", "Cabbar"))
data.frame(c(1, 2, 3), c("Samir", "Cabbar", NA))
frame_with_na <- data.frame(c(1, 2, 3), c("Samir", "Cabbar", NA))
is.na(frame_with_na$c..Samir....Cabbar...NA.[3])
is.na(frame_with_na$c..Samir....Cabbar...NA.[2])
frame_with_na <- data.frame(c(1, 2, 3), names = c("Samir", "Cabbar", NA))
is.na(frame_with_na$names[2])
# as
numbers_list <- list(1, 2, 3, 4, 5, 6)
numbers_list
numbers_array <- as.array(numbers_list)
numbers_array
class(numbers_list)
class(numbers_array)
3
class(3)
as.character(3)
class(as.character(3))
class(questions)
as.logical(1)
as.logical(0)
as.logical(3443)
as.logical(NULL)
help(sum)
sum(numbers)
sum(12, 23, NA)
sum(num1, num2)
num1 <- NA
num2 <- 45
sum(num1, num2)
# if sum() returns NA, try following one
sum(num1, num2, na.rm = TRUE)
help(nchar)
# nchar
nchar("i don't know")
x <- c("asfef", "qwerty", "yuiop[", "b", "stuff.blah.yech")
nchar(x)
nchar(x)
x <- c("asfef", NA, "stuff.blah.yech")
nchar(x)
nchar(x, keepNA = TRUE)
nchar(x, keepNA = FALSE)
mean()
help("mean")
